{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fess5\\\\express-react-app(copy)\\\\project\\\\src\\\\Components\\\\PageAdmin\\\\PageAdmin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport pageAdminStyles from './PageAdmin.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageAdmin = () => {\n  _s();\n  const [titleProduct, setProductTitle] = useState(''); //создается состояние productId хранит текущее значение поля ввода\n\n  const handleProductTitleChange = event => {\n    // функция предназначенная для обновления состояния productId в React при изменении значения поля ввода\n    setProductTitle(event.target.value);\n  };\n  const handleSubmit = async event => {\n    //вызывается при отправке формы\n    event.preventDefault();\n\n    // Проверяем, что titleProduct определено перед созданием FormData\n    if (!titleProduct) {\n      console.error('titleProduct не определено');\n      return; // Завершаем функцию, чтобы избежать отправки пустых данных\n    }\n    const formData = new FormData(); // данные формы для отправки на сервер\n    formData.append('titleProduct', titleProduct); //значение хранящееся в состоянии\n    console.log('Отправляем данные на сервер:', formData);\n    try {\n      const response = await fetch('http://localhost:3001/admin', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log('Ответ от сервера:', data);\n    } catch (error) {\n      console.error('Ошибка при отправке данных на сервер:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: pageAdmin.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u0430\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u043E\\u0440\\u0430 \\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438 \\u0442\\u043E\\u0432\\u0430\\u0440\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u0430\",\n          value: titleProduct,\n          onChange: handleProductTitleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(PageAdmin, \"noofSL85jIgbiJx34Til8jarX1E=\");\n_c = PageAdmin;\nexport default PageAdmin;\n\n/* \r\n const [productImage, setProductImage] = useState('');\r\n const [productTitle, setProductTitle] = useState('');\r\n const [overview, setOverview] = useState('');\r\n const [price, setPrice] = useState('');\r\n const [productAvability, setProductAvability] = useState(false);\r\n const [productImageName, setProductImageName] = useState('');*/\n\n/* const handleProductImageChange = (event) => {\r\n     const file = event.target.files[0];\r\n     setProductImage(file);\r\n     setProductImageName(file.name);\r\n };\r\n   const handleProductTitleChange = (event) => {\r\n     setProductTitle(event.target.value);\r\n };\r\n   const handleOverviewChange = (event) => {\r\n     setOverview(event.target.value);\r\n };\r\n   const handlePriceChange = (event) => {\r\n     setPrice(event.target.value);\r\n };\r\n   const handleProductAvabilityChange = (event) => {\r\n     setProductAvability(event.target.checked);\r\n };\r\n   formData.append('image', productImage);\r\n     formData.append('title', productTitle);\r\n     formData.append('overview', overview);\r\n     formData.append('price', price);\r\n     formData.append('productAvability', productAvability);\r\n     \r\n     \r\n \r\n  \r\n     \r\n         \r\n             <input \r\n                 type=\"file\" \r\n                 placeholder=\"Добавьте картинку\" \r\n                 onChange={handleProductImageChange} \r\n             /><br/>\r\n             <input \r\n                 type=\"text\" \r\n                 placeholder=\"Введите название изображения\" \r\n                 value={productImageName} \r\n                 disabled \r\n             /><br/>\r\n             <input \r\n                 type=\"text\" \r\n                 placeholder=\"Введите название продукта\" \r\n                 value={productTitle} \r\n                 onChange={handleProductTitleChange} \r\n             /><br/>\r\n             <input \r\n                 type=\"text\" \r\n                 placeholder=\"Введите описание продукта\" \r\n                 value={overview} \r\n                 onChange={handleOverviewChange} \r\n             /><br/>\r\n             <input \r\n                 type=\"number\" \r\n                 placeholder=\"Введите цену продукта\" \r\n                 value={price} \r\n                 onChange={handlePriceChange} \r\n             /><br/>\r\n             <input \r\n                 type=\"checkbox\" \r\n                 checked={productAvability} \r\n                 onChange={handleProductAvabilityChange} \r\n             />\r\n             <label>Доступность продукта</label><br/>\r\n             \r\n           \r\n    */\nvar _c;\n$RefreshReg$(_c, \"PageAdmin\");","map":{"version":3,"names":["React","useState","pageAdminStyles","jsxDEV","_jsxDEV","PageAdmin","_s","titleProduct","setProductTitle","handleProductTitleChange","event","target","value","handleSubmit","preventDefault","console","error","formData","FormData","append","log","response","fetch","method","body","data","json","children","className","pageAdmin","container","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/fess5/express-react-app(copy)/project/src/Components/PageAdmin/PageAdmin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport pageAdminStyles from './PageAdmin.module.css';\r\n\r\nconst PageAdmin = () => {\r\n    const [titleProduct, setProductTitle] = useState('');//создается состояние productId хранит текущее значение поля ввода\r\n    \r\n    \r\n    const handleProductTitleChange = (event) => {// функция предназначенная для обновления состояния productId в React при изменении значения поля ввода\r\n        setProductTitle(event.target.value);\r\n    };\r\n\r\n\r\n    const handleSubmit = async (event) => {//вызывается при отправке формы\r\n        event.preventDefault();\r\n    \r\n        // Проверяем, что titleProduct определено перед созданием FormData\r\n        if (!titleProduct) {\r\n            console.error('titleProduct не определено');\r\n            return; // Завершаем функцию, чтобы избежать отправки пустых данных\r\n        }\r\n  \r\n    \r\n        const formData = new FormData();// данные формы для отправки на сервер\r\n        formData.append('titleProduct', titleProduct);//значение хранящееся в состоянии\r\n        console.log('Отправляем данные на сервер:', formData);\r\n    \r\n        try {\r\n            const response = await fetch('http://localhost:3001/admin', {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n            const data = await response.json();\r\n            console.log('Ответ от сервера:', data);\r\n        } catch (error) {\r\n            console.error('Ошибка при отправке данных на сервер:', error);\r\n        }\r\n    };\r\n\r\nreturn (\r\n    <div>\r\n        <div className={pageAdmin.container}>\r\n            <h1>Страница администратора магазина</h1>\r\n            <h3>Редактирование карточки товара</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Введите название продукта\" \r\n                    value={titleProduct} \r\n                    onChange={handleProductTitleChange} \r\n                /><br/>\r\n                <button type=\"submit\">Добавить продукт</button>\r\n            </form> \r\n        </div>\r\n    </div>\r\n\r\n    );\r\n    \r\n};\r\n\r\nexport default PageAdmin;\r\n\r\n\r\n\r\n   /* \r\n    const [productImage, setProductImage] = useState('');\r\n    const [productTitle, setProductTitle] = useState('');\r\n    const [overview, setOverview] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [productAvability, setProductAvability] = useState(false);\r\n    const [productImageName, setProductImageName] = useState('');*/\r\n\r\n   \r\n\r\n   /* const handleProductImageChange = (event) => {\r\n        const file = event.target.files[0];\r\n        setProductImage(file);\r\n        setProductImageName(file.name);\r\n    };\r\n\r\n    const handleProductTitleChange = (event) => {\r\n        setProductTitle(event.target.value);\r\n    };\r\n\r\n    const handleOverviewChange = (event) => {\r\n        setOverview(event.target.value);\r\n    };\r\n\r\n    const handlePriceChange = (event) => {\r\n        setPrice(event.target.value);\r\n    };\r\n\r\n    const handleProductAvabilityChange = (event) => {\r\n        setProductAvability(event.target.checked);\r\n    };\r\n\r\n    formData.append('image', productImage);\r\n        formData.append('title', productTitle);\r\n        formData.append('overview', overview);\r\n        formData.append('price', price);\r\n        formData.append('productAvability', productAvability);\r\n        \r\n        \r\n    \r\n\r\n   \r\n        \r\n            \r\n                <input \r\n                    type=\"file\" \r\n                    placeholder=\"Добавьте картинку\" \r\n                    onChange={handleProductImageChange} \r\n                /><br/>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Введите название изображения\" \r\n                    value={productImageName} \r\n                    disabled \r\n                /><br/>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Введите название продукта\" \r\n                    value={productTitle} \r\n                    onChange={handleProductTitleChange} \r\n                /><br/>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Введите описание продукта\" \r\n                    value={overview} \r\n                    onChange={handleOverviewChange} \r\n                /><br/>\r\n                <input \r\n                    type=\"number\" \r\n                    placeholder=\"Введите цену продукта\" \r\n                    value={price} \r\n                    onChange={handlePriceChange} \r\n                /><br/>\r\n                <input \r\n                    type=\"checkbox\" \r\n                    checked={productAvability} \r\n                    onChange={handleProductAvabilityChange} \r\n                />\r\n                <label>Доступность продукта</label><br/>\r\n                \r\n              \r\n       */\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}