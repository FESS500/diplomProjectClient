{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fess5\\\\express-react-app(copy)\\\\project\\\\src\\\\Components\\\\Express\\\\Express.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; //импортируем методы useState и useEffect\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Express(props) {\n  _s();\n  //создан компонент который получит данные из экспресса\n  const [data, setData] = useState([]); // создаем состояние data где хранятся полученные данные, setData для обновления состояния data\n\n  useEffect(() => {\n    // Отправляем GET запрос к вашему серверу Express\n    fetch('http://localhost:3001/product').then(response => response.json()).then(data => {\n      // Обновляем состояние данных в компоненте React\n      setData(data);\n      console.log(data); // Выводим данные в консоль\n    }).catch(error => {\n      console.error('Ошибка получения данных из сервера:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(Express, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Express;\nexport default Express;\nvar _c;\n$RefreshReg$(_c, \"Express\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Express","props","_s","data","setData","fetch","then","response","json","console","log","catch","error","Page","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/fess5/express-react-app(copy)/project/src/Components/Express/Express.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';//импортируем методы useState и useEffect\r\n\r\n\r\nfunction Express(props) {//создан компонент который получит данные из экспресса\r\n  const [data, setData] = useState([]);// создаем состояние data где хранятся полученные данные, setData для обновления состояния data\r\n\r\n  useEffect(() => {\r\n    // Отправляем GET запрос к вашему серверу Express\r\n    fetch('http://localhost:3001/product')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // Обновляем состояние данных в компоненте React\r\n        setData(data);\r\n        console.log(data); // Выводим данные в консоль\r\n      })\r\n      .catch(error => {\r\n        console.error('Ошибка получения данных из сервера:', error);\r\n      });\r\n  }, []);\r\n  \r\n return <Page data={data} />;\r\n}\r\n\r\nexport default Express;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnD,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAAC;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC;;EAErCC,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,+BAA+B,CAAC,CACnCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACH,IAAI,IAAI;MACZ;MACAC,OAAO,CAACD,IAAI,CAAC;MACbM,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC7D,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEP,oBAAOb,OAAA,CAACc,IAAI;IAACV,IAAI,EAAEA;EAAK;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5B;AAACf,EAAA,CAlBQF,OAAO;AAAAkB,EAAA,GAAPlB,OAAO;AAoBhB,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}