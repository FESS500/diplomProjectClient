{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fess5\\\\express-react-app(copy)\\\\project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; //импортирование методов хуков\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ProductCard from './Components/ProductCard/ProductCard'; //Импортирование компоненты ProductCard\nimport Display from './Components/Display/Display'; //Импортирование компоненты Display\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Отправляется GET запрос к серверу на Express\n    fetch('http://localhost:3001/product').then(response => response.json()).then(data => {\n      // Обновляем состояние данных в компоненте React\n      setData(data);\n    }).catch(error => {\n      console.error('Ошибка получения данных из сервера:', error);\n    }); //проверка на ошибки\n  }, []);\n  console.log(data); // Выводим данные в консоль для контроля поступления данных с сервера\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Display, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(ProductCard, {\n                data: data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this); //data принимаемая с сервера отдается в другие компоненты\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Switch","ProductCard","Display","jsxDEV","_jsxDEV","App","_s","data","setData","fetch","then","response","json","catch","error","console","log","children","path","exact","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/fess5/express-react-app(copy)/project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';//импортирование методов хуков\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ProductCard from './Components/ProductCard/ProductCard';//Импортирование компоненты ProductCard\nimport Display from './Components/Display/Display';//Импортирование компоненты Display\n\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // Отправляется GET запрос к серверу на Express\n    fetch('http://localhost:3001/product')\n      .then(response => response.json())\n      .then(data => {\n        // Обновляем состояние данных в компоненте React\n        setData(data);\n        \n      })\n      .catch(error => {\n        console.error('Ошибка получения данных из сервера:', error);\n      });//проверка на ошибки\n  }, []);\n  console.log(data); // Выводим данные в консоль для контроля поступления данных с сервера\n  return (\n    <div>\n    <Router>\n      <div>\n      <Switch>\n      <Route path=\"/\" exact>\n        <div>\n            <Display />\n            <ProductCard data={data} />\n        </div>\n      </Route>\n      </Switch>         \n    </div>\n    </Router>\n\n    </div>\n\n  );//data принимаемая с сервера отдается в другие компоненты\n  \n}\n\n    \n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC;AACnD,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,WAAW,MAAM,sCAAsC,CAAC;AAC/D,OAAOC,OAAO,MAAM,8BAA8B,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd;IACAa,KAAK,CAAC,+BAA+B,CAAC,CACnCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACH,IAAI,IAAI;MACZ;MACAC,OAAO,CAACD,IAAI,CAAC;IAEf,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC7D,CAAC,CAAC,CAAC;EACP,CAAC,EAAE,EAAE,CAAC;EACNC,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC,CAAC,CAAC;EACnB,oBACEH,OAAA;IAAAa,QAAA,eACAb,OAAA,CAACN,MAAM;MAAAmB,QAAA,eACLb,OAAA;QAAAa,QAAA,eACAb,OAAA,CAACJ,MAAM;UAAAiB,QAAA,eACPb,OAAA,CAACL,KAAK;YAACmB,IAAI,EAAC,GAAG;YAACC,KAAK;YAAAF,QAAA,eACnBb,OAAA;cAAAa,QAAA,gBACIb,OAAA,CAACF,OAAO;gBAAAkB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACXnB,OAAA,CAACH,WAAW;gBAACM,IAAI,EAAEA;cAAK;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC,CAEN;AAEJ;AAACjB,EAAA,CApCQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}