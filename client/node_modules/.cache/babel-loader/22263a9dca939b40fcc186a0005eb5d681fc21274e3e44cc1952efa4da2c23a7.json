{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fess5\\\\express-react-app(copy)\\\\project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; //импортирование методов хуков\nimport ProductCard from './Components/ProductCard/ProductCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Отправляем GET запрос к серверу на Express\n    fetch('http://localhost:3001/product').then(response => response.json()).then(data => {\n      // Обновляем состояние данных в компоненте React\n      setData(data);\n    }).catch(error => {\n      console.error('Ошибка получения данных из сервера:', error);\n    });\n  }, []);\n  console.log(data); // Выводим данные в консоль\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductCard, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this); //data принимаемая с сервера отдается в другие компоненты\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\n\n/*<h1>Данные из Express:</h1>\n      <ul>\n        {/* Отображаем полученные данные }\n        {data.map(item => (\n          <p key={item.id}>{item.img}{item.titleProduct}{item.overview}{item.productAvability}</p>\n          \n        ))}\n      </ul>*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ProductCard","jsxDEV","_jsxDEV","App","_s","data","setData","fetch","then","response","json","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/fess5/express-react-app(copy)/project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';//импортирование методов хуков\nimport ProductCard from './Components/ProductCard/ProductCard';\nfunction App() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // Отправляем GET запрос к серверу на Express\n    fetch('http://localhost:3001/product')\n      .then(response => response.json())\n      .then(data => {\n        // Обновляем состояние данных в компоненте React\n        setData(data);\n        \n      })\n      .catch(error => {\n        console.error('Ошибка получения данных из сервера:', error);\n      });\n  }, []);\n  console.log(data); // Выводим данные в консоль\n  return (\n    <div>\n      \n      <ProductCard data={data} />\n    </div>\n  );//data принимаемая с сервера отдается в другие компоненты\n}\n\nexport default App;\n\n/*<h1>Данные из Express:</h1>\n      <ul>\n        {/* Отображаем полученные данные }\n        {data.map(item => (\n          <p key={item.id}>{item.img}{item.titleProduct}{item.overview}{item.productAvability}</p>\n          \n        ))}\n      </ul>*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC;AACnD,OAAOC,WAAW,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,+BAA+B,CAAC,CACnCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACH,IAAI,IAAI;MACZ;MACAC,OAAO,CAACD,IAAI,CAAC;IAEf,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC7D,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACNC,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC,CAAC,CAAC;EACnB,oBACEH,OAAA;IAAAa,QAAA,eAEEb,OAAA,CAACF,WAAW;MAACK,IAAI,EAAEA;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC,CACN;AACJ;AAACf,EAAA,CAvBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAyBZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}